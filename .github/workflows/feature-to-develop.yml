name: Feature to Develop PR

on:
  push:
    branches:
      - feature/**

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.11.3"

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ github.workspace }}

      - name: Terraform Init and Validate
        run: |
          rm -rf .terraform*
          find . -type f -name "*.tf" -exec sed -i '/backend\s*"s3"/d' {} \;

          cat > backend.tf <<EOF
          terraform {
            backend "s3" {}
          }
          EOF

          terraform init -backend=false
          terraform validate
          rm -f backend.tf
        working-directory: ${{ github.workspace }}

      - name: Get Branch Name
        id: branch
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Create Develop Branch
        run: |
          git reset --hard
          git clean -fd
          git fetch --all

          if ! git show-ref --verify --quiet refs/remotes/origin/develop; then
            git checkout main
            git checkout -b develop
            git push -u origin develop
          fi
        working-directory: ${{ github.workspace }}

      - name: Check Existing PR
        id: check-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = context.ref.replace('refs/heads/', '');
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${branch}`,
              base: 'develop'
            });

            if (prs.data.length > 0) {
              console.log(`‚ö†Ô∏è PR already exists: #${prs.data[0].number}`);
              return prs.data[0].number;
            }

            console.log('‚úÖ No existing PR found.');
            return null;

      - name: Create Pull Request
        id: create-pr
        if: steps.check-pr.outputs.result == 'null'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = context.ref.replace('refs/heads/', '');

            const pr = await github.rest.pulls.create({
              owner,
              repo,
              title: `‚ú® Feature: ${branch}`,
              body: `Este PR foi criado automaticamente pela pipeline.\n\n  ## Altera√ß√µes\n  - Altera√ß√µes detectadas em \`${branch}\`\n  - Terraform validado com sucesso ‚úÖ\n  - Formata√ß√£o do c√≥digo verificada ‚úÖ\n\n  ## Checklist\n  - [ ] C√≥digo formatado corretamente\n  - [ ] Valida√ß√£o do Terraform passou\n  - [ ] Documenta√ß√£o atualizada (se necess√°rio)`,
              head: branch,
              base: 'develop',
              // Removed draft: true to create a non-draft pull request
            });

            console.log(`üöÄ Created PR: #${pr.data.number}`);
            return pr.data.number;

      - name: Add Labels
        uses: actions/github-script@v6
        env:
          EXISTING_PR: ${{ steps.check-pr.outputs.result }}
          NEW_PR: ${{ steps.create-pr.outputs.result }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = process.env.EXISTING_PR || process.env.NEW_PR;

            if (prNumber) {
              try {
                await github.rest.issues.addLabels({
                  owner,
                  repo,
                  issue_number: parseInt(prNumber),
                  labels: ['feature', 'auto-pr', 'terraform']
                });
                console.log(`üè∑Ô∏è Labels added to PR #${prNumber}`);
              } catch (error) {
                console.log('‚ö†Ô∏è Could not add labels:', error.message);
              }
            } else {
              console.log('‚ÑπÔ∏è No PR number available, skipping label addition.');
            }
